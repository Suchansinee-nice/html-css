* {
  /* color property does not inherited to body element, So all text will be pink color not grey color. - misunderstand*/
  /* if body do not have color, color pink inherit to body element - misunderstand*/

  /* if body do not have color property , color pink will apply because universal selector is the lowest priority, if no color property in body, So the color in * will applied
  actually all of property applied , จริงๆไม่เกี่ยวกับว่า ถ้า element selector ไม่มี color แล้ว universal จะขึ้นมาทำแทน คือ property มีตรงไหนมันทำหมด แต่ถ้าอันไหนมันมีซ้ำกัน conflict กัน มันจะเลือกตาม priority*/

  /* แต่ทำไมอันนี้มันใช้ color ของ universal แทน body วะ? */
  /* universal มันใช้กับทุก element แล้วถ้าเกิดมันไป conflict กับอันอื่นจะใช้อันไหน อันที่สูงกว่า หรือ ใช้ตัวมันด้วยเพราะมันใช้กับทุก element */
  /* conclusion:  The universal selector has the least priority of the methods of direct selection, but any method of direct selection has priority over inherited values, such as those inherited from the body. */
  /* color: #f37ac5; */

  /* border-top: 10px solid #1098ad; */

  margin: 0;
  padding: 0;
}

/* PAGE SECTION - all the big dividing pieces of our page. */
body {
  /* color grey are 1st priority more than pink from universal selector */
  color: #444;
  font-family: sans-serif;

  /* border-top on body is red because it has higher priority than universla selector */
  border-top: 10px solid #1098ad;
  position: relative;
}

.container {
  width: 800px;
  /* margin-left: auto;
  margin-right: auto; */
  margin: 0 auto;
  /* position: relative; */
}

.main-header {
  background-color: #f7f7f7;
  /* padding: 20px;
  padding-left: 40px;
  padding-right: 40px; */
  padding: 20px 40px;
  margin-bottom: 60px;
  /* height: 80px; */
}

/* move to top because it's bigger element */
nav {
  font-size: 18px;
  /* The p is nested deeper down (in the HTML file) than the nav. Thus p elements nested inside of nav elements are more influenced by the p styling than the nav styling.  */
  text-align: center;
}

article {
  margin-bottom: 60px;
}

.post-header {
  margin-bottom: 40px;
}

aside {
  background-color: #f7f7f7;
  border-top: 5px solid #ee55d4;
  border-bottom: 5px solid #ee55d4;
  padding: 50px 0;
  width: 500px;
  /* padding-top: 50px;
  padding-bottom: 50px; */
}

/* SMALLER ELEMENT */
h1,
h2,
h3,
h4,
p,
li {
  /* Noted: If we use inherited and overwritten value in child element. it will come to concept 'conflict value', So the last one that will get applied. -misundestand */
  /* font-family: serif; */
  /* color: #444; */
}

/* Notice: h1,h2,h3,h4,p,li selector before we use grey color, 
but another h1,g2,h3 selector after we use pink color, so it will use the last one */

h1,
h2,
h3 {
  color: #ee55d4;
}

h1 {
  font-size: 26px;
  text-transform: uppercase;
  font-style: italic;
}

/* if we have 2 color , it will use the last one. */

h2 {
  font-size: 40px;
  margin-bottom: 30px;
}

h3 {
  font-size: 30px;
  margin-bottom: 20px;
  margin-top: 40px;
}

h4 {
  font-size: 20px;
  text-transform: uppercase;
  text-align: center;
}

p {
  font-size: 22px;
  line-height: 1.5;
  margin-bottom: 15px;
}

ul,
ol {
  margin-left: 50px;
  margin-bottom: 20px;
}

li {
  font-size: 20px;
  margin-bottom: 10px;
  /* display: inline; */
}

li:last-child {
  margin-bottom: 0px;
}

/* footer p {
  font-size: 16px;
} */

/* we want only one paragraph inside the header which are inside of articles to be italic. */
/* So this actually work, but we now even more encoding the html structure into out css selector. 
and that make code hard to maintain in the future if we ever change html that not a good idea*/
/* article header p {
  font-style: italic;
} */

#author {
  font-style: italic;
  font-size: 18px;
}

#copyright {
  font-size: 16px;
}

.related-author {
  font-size: 18px;
  font-weight: bold;
}

.bullet-remove {
  list-style: none;
}

body {
  /* background-color: aliceblue; */
}

/* .first-list {
  font-weight: bold;
} */

/* pseudo-classes */
li:first-child {
  font-weight: bold;
}

li:last-child {
  font-style: italic;
}

li:nth-child(even) {
  /* color: red; */
}

/* descendant selector : it will make all p element inside article element with green color; not only first child paragraph-all paragraph in article!*/
/* article p {
  color: rgb(49, 185, 56);
} */

/*Misconception: this won't work */
/* this is a descendant elector */
/* this not work because p element is the first p element in article, but p element is not first element (first-child) in article. first child is header element. */
article p:first-child {
  color: red;
}

/* article p:last-child {
  color: red;
} */

/* a {
  color: red;
} */

/* Styling links LVHA*/
/* specify the link pseudo-class, this will then only target actual link*/
a:link {
  color: #1098ad;
  text-decoration: none;
}

a:visited {
  /* color: #777; */
  color: #1098ad;
}

a:hover {
  font-weight: bold;
  color: orangered;
  text-decoration: underline dotted orangered;
}

a:active {
  background-color: aquamarine;
  font-style: italic;
}

/* a {
  color: palevioletred;
} */

nav a:link {
  /* background-color: yellow;
  margin: 20px;
  padding: 20px;
  display: block; */

  margin-right: 30px;
  /* notthing change because inline element not apply top-bottom margin. */
  margin-top: 10px;
  /* after that we add this, see we got space on top. */
  display: inline-block;
}

nav a:link:last-child {
  margin-right: 0;
}

h1::first-letter {
  font-style: normal;
  margin: 5px;
}

h2::first-letter {
  font-size: 80px;
}

/* adjacent element is add plus */
h3 + p::first-line {
  color: red;
}

h2 {
  /* background-color: orange; */
  position: relative;
}

h2::after {
  content: "TOP";
  background-color: #ffe70e;
  color: #444;
  font-size: 16px;
  font-weight: bold;
  /* by default, pseudo element is inline element- change for add padding */
  display: inline-block;
  padding: 5px 10px;
  position: absolute;
  top: -10px;
  right: -25px;
}

/* p::first-line {
  color: red;
} */

/* Resolving conflict */
/* this 4 rules that are applying to that element */
/* #copyright {
  color: red;
} */

/* .copyright {
  color: blue;
} */

/* .text {
  color: yellow;
} */

/*footer p {
  color: green;
} */ /* color: green !important; */

/* inheritance */
/* default font is 16px */

/* nav a:link,
nav p {
  font-size: 18px;
} */

/* universal selector */
/* * {
  color: red;
}
p {
  color: blue;
} */

.post-image {
  /* width: 800px; */
  width: 100%;
  height: auto;
  /* margin: 100px; */
}

/* button { */
/* position: relative; */
/* nothing change , it's depend on position html code */
/* top: 50px; */

/* move from bottom 50px from position of html code , when we expand or shrink size of page, element will stay same position*/
/* bottom: 50px;
  left: 50px; */
/* } */

button {
  font-size: 22px;
  padding: 20px;
  cursor: pointer;

  position: absolute;

  /* move from bottom 50px - show in view port (visible part of the page) , when we expand or shrink size of page , element will move*/
  /* bottom: 50px;
  left: 50px; */

  /* So again, it moves it to this place in the view port, but we want it down here, so from the page. */
  bottom: 50px;
  right: 50px;
}
